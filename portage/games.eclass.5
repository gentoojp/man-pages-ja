.\"
.\" Japanese Version Copyright (c) 2003-2004 Mamoru KOMACHI
.\"     all rights reserved
.\" Translated on 19 Aug 2003 by Mamoru KOMACHI <usata@gentoo.org>
.\"
.TH "GAMES.ECLASS" "5" "Jun 2003" "Portage 2.0.51" "Portage"
.SH "名前"
games \- ゲームのインストールの標準化
.SH "説明"
\fBgames\fR eclass はシステムにゲームを emerge
する方法を集中コントロールするために使われる。
基本的にはこの eclass で全てのファイルがインストールされる場所と
所有者をコントロールする。自分の game がインストールされる方法を
変えたいなら、ちょっと \fBgames\fI eclass を編集してみよう! :)
.SH "VARIABLES"
.TP
.B "GAMES_PREFIX" = \fI"/usr/games"\fR
ゲームをインストールする場所の prefix。
.TP
.B "GAMES_PREFIX_OPT" = \fI"/opt"\fR
バイナリ配布されているゲームをインストールする場所の prefix。
.TP
.B "GAMES_DATADIR" = \fI"/usr/share/games"\fR
共通データファイルをインストールする場所の prefix。
.TP
.B "GAMES_DATADIR_BASE" = \fI"/usr/share"\fR
上と同じだが、ゲームによってはデータディレクトリのパスに自動で
「/games/」を加えるものがある。
.TP
.B "GAMES_SYSCONFDIR" = \fI"/etc/games"\fR
ゲームが設定ファイルを保存する場所。
.TP
.B "GAMES_STATEDIR" = \fI"/var/games"\fR
実行時ゲームが状態を保存する場所。
これにはハイスコアファイルのようなものも含む。
ゲームが2つ以上ファイルを作成するなら、
全ファイルは \fB${GAMES_STATEDIR}/${PN}\fR
ディレクトリの中に保存されるようにする。
そうでなければ、単に \fB${GAMES_STATEDIR}/\fR
の中にファイルを1つ作成する。
また、この場所に直接ファイルを作成するなら、
そのファイルにはパッケージ固有の名前を使うよう心がけること。
.TP
.B "GAMES_LIBDIR" = \fI"/usr/games/lib"\fR
ゲームがライブラリを保存する場所。
.TP
.B "GAMES_BINDIR" = \fI"/usr/games/bin"\fR
ゲームが実行バイナリを保存もしくはリンクする場所。
ゲームのバイナリをここに置くことで、$PATH
の膨張を防ぐことができる。
.TP
.B "GAMES_ENVD" = \fI"90games"\fR
env.d に登録するとき使うファイル名。
.TP
.B "GAMES_USER" = \fI"games"\fR
ゲーム関係の全ファイルを所有するユーザ名。
.TP
.B "GAMES_GROUP" = \fI"games"\fR
ゲーム関係の全ファイルを所有するグループ名。
.SH "関数: 全般"
.TP
.B "prepgamesdirs" \fI[ディレクトリ]\fR
\fBGAMES_*\fR 変数で指定されたディレクトリと、パラメータとして指定された
追加ディレクトリの中で見つかった全ファイル/ディレクトリの所有権を変更する。
この関数は、全ディレクトリのパーミッションを 750 (u+rwx,g+rx-w,u-rwx)
に変更し、そして全ファイルのパーミッションに g+r,o-rwx
のマスクをかける。
.br
\fB*注意\fR: この関数は *必ず* \fBsrc_install\fR
関数の中で最後に呼ばれるものでなければならない。
もし仮に Portage でこの関数の前に他の関数を呼ぶならこの関数は
\fBsrc_install\fR の最後まで待たせることができるが、
最後に来るまでにこの関数を呼ぶのを忘れないこと!
.TP
.B games_pkg_setup
この関数は自動で \fBGAMES_USER\fR と \fBGAMES_GROUP\fR
をシステムに追加する。
ebuild で \fBpkg_setup\fR を定義しているなら、
\fBpkg_setup\fR 関数の最後でこの関数を呼ぶのを忘れずに。
.TP
.B games_pkg_postinst
この関数は自動で \fBGAMES_ENVD\fR ファイルを生成し、
ゲームを遊ぶためには \fBGAMES_GROUP\fR
に所属する必要があることを簡単に表示する。
ebuild で \fBpkg_postinst\fR を定義しているなら、
\fBpkg_postinst\fR 関数の最後でこの関数を呼ぶのを忘れずに。
.SH "関数: コンパイル"
.TP
.B egamesconf
\fBeconf\fR 関数と同じだが、ゲーム関係の変数(上記参照)を渡す。
詳しい情報は \fBebuild\fR(5) の \fBeconf\fR を参照。
.SH "関数: インストール"
.TP
.B egamesinstall
\fBeinstall\fR 関数と同じだが、ゲーム関係の変数(上記参照)を渡す。
詳しい情報は \fBebuild\fR(5) の \fBeinstall\fR を参照。
.TP
.B dogamesbin dogamessbin
\fBdobin\fR や\fBdosbin\fR とそれぞれ同じだが、\fBGAMES_PREFIX\fR
にバイナリをインストールする。詳しい情報は \fBebuild\fR(5) を参照。
.TP
.B dogameslib dogameslib.a dogameslib.so
\fBdolib\fR、\fBdolib.a\fR そして \fBdolib.so\fR とそれぞれ同じだが、
\fBGAMES_PREFIX\fR にバイナリをインストールする。
詳しい情報は \fBebuild\fR(5) を参照。
.TP
.B newgamesbin newgamessbin
\fBnewbin\fR や \fBnewsbin\fR とそれぞれ同じだが、
\fBGAMES_PREFIX\fR にバイナリをインストールする。
詳しい情報は \fBebuild\fR(5) を参照。
.TP
.B gamesowners \fI<ファイルまたはディレクトリ>\fR
\fBgamesowners\fR は所有者と所有グループをそれぞれ \fBGAMES_USER\fR
と \fBGAMES_GROUP\fR に変更する。
.TP
.B gamesperms \fI<ファイルまたはディレクトリ>\fR
\fBgamesperms\fR はパーミッションを u+rw,g+r-w,o-rwx
のマスクで変更する。
.TP
.B games_make_wrapper \fI<wrapper>\fR \fI<bin>\fR \fI<chdir>\fR
簡単なラッパースクリプトを作成する。
実行前にそのパッケージのデータツリーのルートにディレクトリを変更する
必要があるパッケージを扱う際に便利である。
この関数は \fIbin\fR を実行する前に \fIchdir\fR ディレクトリに
chdir する \fIwrapper\fR という名前のラッパースクリプトを作成する。
この \fIwrapper\fR ファイルは \fBGAMES_BINDIR\fR に置かれる。
.SH "バグ報告"
バグ報告は http://bugs.gentoo.org/ 経由で行なってください。
.SH "参照"
.BR ebuild (5)
.SH "ファイル"
.BR /usr/portage/eclass/games.eclass
.SH "著者"
Mike Frysinger <vapier@gentoo.org>
.SH "CVS ヘッダ"
原文: games.eclass.5,v 1.7
