.\"
.\" Japanese Version Copyright (c) 2003 TAKEDA hiroyuki
.\"                                2004 Mamoru KOMACHI
.\"     all rights reserved
.\" Translated on 16 Feb 2004 by TAKEDA hiroyuki <diapar@mizar.freemail.ne.jp>
.\"
.TH "PORTAGE" "5" "Jan 2004" "Portage 2.0.51" "Portage"
.SH 名前
portage \- Gentooの中核
.SH "説明"
現在のPortageコードは、多くの異なった設定ファイルを使用する。その多くは、
ユーザーや通常の開発者には知られていない。ここでは、ユーザーがPortageをより
効果的に使用できるように、その知られていない部分を明らかにしていく。
これは、まだmanページに乗っていないファイルのみに対するリファレンスである。
.IP 注釈:
もし、何かをemergeする方法についての情報を探しているのなら、
.BR emerge (1)を参照のこと。
.SH "書式"
.TP
.BR /etc/
.nf
make.globals
.fi
.BR make.conf (5)
.TP
.BR /etc/make.profile/
.nf
deprecated
make.defaults
packages
packages.build
package.provided
use.defaults
use.mask
virtuals
.fi
.TP
.BR /etc/portage/
.nf
bashrc
package.mask
package.unmask
package.keywords
package.use
mirrors
categories
use.mask
.fi
.TP
.BR /etc/portage/profile/
サイト固有の\fB/etc/make.profile/\fR上書き設定
.TP
.BR /usr/portage/profiles/
.nf
arch.list
categories
package.mask
thirdpartymirrors
use.desc
use.local.desc
.fi
.TP
.BR /var/lib/portage/
world
.SH "用語解説"
後続の章では、いくつかの用語は聞き慣れない、あるいはPortage特有の意味で使用
されているかもしれない。詳細な説明は、参照先のmanページを見ること。
.RS
.TP
.B DEPENDアトム(それぞれのパッケージ名)
パッケージ名と一致する文字列。カテゴリ名/パッケージ名という形式で構成される。
任意で、論理演算子やバージョンを含めることも可能。
.br
さらに詳しくは: 
.BR ebuild (5)
.TP
.B KEYWORD
それぞれのアーキテクチャは、一意なKEYWORDを持つ。
.br
さらに詳しくは: 
.BR ebuild (5)
.TP
.B virtual
"virtual"カテゴリの一部であるDEPENDアトム。異なるパッケージが依存性を満足
するが、それらのうち1つしか必要ないようなときに使用される。
.br
さらに詳しくは: 
.BR ebuild (5)
.RE
.SH "ファイルの説明"
.TP
.BR /etc/
.RS
.TP
.BR make.globals
Portageのグローバルなデフォルト設定。このファイルはportageパッケージに
含まれている。\fBmake.conf\fR内の設定は、これを上書きする。書式
については、\fBmake.conf\fR(5)にて広範に説明されている。
.TP
.BR make.conf
Portageに対するグローバルなカスタム設定。\fBmake.conf\fR(5)を参照のこと。
.RE
.TP
.BR /etc/make.profile/
通常は\fB/usr/portage/profiles/\fR内の正確なプロファイルに対するシンボリック
リンクになっている。これは、Portageツリーの一部であるため`emerge \-\-sync`を
実行することで簡単にアップデート/再生成することができる。
このファイルでは、(通常はアーキテクチャ特有の)プロファイルが定義される。
もし、カスタムプロファイルが必要なら、独自の\fB/etc/make.profile/\fRを作成して、
そちらに移行すること。しかし、単にいくつかの設定を上書きしたい場合、
これらのファイルは編集しないように。というのは、次回の`emerge \-\-sync`で
それらの変更は消失してしまうためである。上書き設定については、後述される章の
\fB/etc/portage/\fRを参照のこと。
.RS
.TP
.BR deprecated
そのプロファイルが非推奨であることを示すファイルで、既にGentooによってサポート
されていないことを意味する。
ユーザーのアップグレード対象として推奨されるプロファイル名を含む。
.TP
.BR make.defaults
Portageのデフォルトのプロファイル設定。一般的な書式については
\fBmake.conf\fR(5)で述べられてる。使用しているプロファイルの
\fImake.defaults\fRではいくつかの特殊な変数も定義されている。

.PD 0
.RS
.TP
.BR ARCH
アーキテクチャタイプ(x86/ppc/hppa/etc...)。
.TP
.B USERLAND = \fI"GNU"\fR
BSD/cygwin/etc... サポート
.TP
.B PORTAGE_LIBC = \fI"glibc"\fR
uClibc/BSD libc/etc... サポート
.TP
.BR PROFILE_ARCH
同じ\fBARCH\fRの中のマシンを区別する。sparcマシンは全てARCH=sparc
であるが、この変数は'sparc32'か'sparc64'に設定されている。
.TP
.BR STAGE1_USE
stage1からstage2へとブートストラップするときに必要となる可能性がある特殊なUSEフラグ。
.TP
.BR GRP_STAGE23_USE
stage3とGRPセットをビルドするときにcatalystが使う特殊なUSEフラグ。
.RE
.PD 1
.TP
.BR packages
このファイルには、2つの目的がある。1つは、特定のパッケージ/バージョンを
プロファイルに基づいてマスクすること。2つ目は、\fIsystem\fRという特別な
クラスを構成するパッケージのリストを提供すること。

.I 書式:
.nf
\- #から始まる行はコメント。 
\- 1行に1つのマスク対象のDEPENDアトムを記述する。
\- systemクラスに追加されるパッケージは、*で始まる。
.fi
.I 注:
カスケードプロファイル設定においては、パッケージアトムの先頭に '\-'
をつけることによって、親プロファイルで追加されたパッケージを子プロファイルで削除することができる。

.I 例:
.nf
# この行はコメント!
# glibc 2.3 以下のバージョンのみを許可する場合
<sys\-libs/glibc\-2.3
# バージョンを問わず、bashをsystemクラスに追加する場合
*app\-shells/bash
# 4.2以前のバージョンのreadlineのみを許可し、
# systemクラスに追加する場合
*<sys\-libs/readline\-4.2
.fi
.TP
.BR packages.build
stage1 tarballを構成するパッケージのリスト(1行に1つ)。
実際は、stageを構築する人にしか関係ない。
.TP
.BR package.provided
Portageがインストールされている(provided)とみなすパッケージのリスト
(1行に1つ)。Linux 以外のシステムに移植するときに便利である。
Portage はここに挙げられたパッケージは、
別のパッケージがここに挙げられているバージョンより新しいものを
明示的に要求しないかぎり、パッケージを更新しようとしない。
基本的に、これは\fBemerge \-\-inject\fRの文法を置き換えるリストである。

例えば、自分で2.6系列のカーネルを管理しているとすると、
Portage に「sys-kernel/development-sources-2.6.7」
がすでにインストールされていると教え、
この依存関係を外すことができる。

.I 書式:
.nf
\- コメントは # で始まる
\- 1行につき1 DEPEND アトム
\- 関係演算子は使えない
\- バージョンは必須
.fi

.I 例:
.nf
# カーネルの面倒は自分で見る
sys-kernel/development-sources-2.6.7

# 自分お手製の QT をインストール
x11-libs/qt-3.3.0
.fi
.TP
.BR use.defaults
ここでは、デフォルトのUSEフラグは定義していないが、auto-USEフラグと
呼ばれているものを定義している。Portageのあまり知られていない機能として、
フラグが明示的には無効にされていない状態で、パッケージがインストールされる場合、
USEフラグが有効にされる場合がある、というものがある。このファイルは、USEフラグと
パッケージの関係が記述されており、これに基づいてauto-USE機能が動作することになる。

言い換えると、もし"sdl"あるいは"\-sdl"をUSEフラグに指定していなくても、
media\-libs/libsdlはemergeしている場合、Portageは自動的に"sdl"をUSEフラグに
追加する。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのUSEフラグと、DEPENDベースアトムのリストを記述する。
.fi

.I 例:
.nf
# media\-libs/libsdlで"sdl"を有効にする場合
sdl        media\-libs/libsdl
# dev\-lang/tclおよびdev\-lang/tkが両方ある場合のみ
# tcltkを有効にしたい場合
tcltk      dev\-lang/tcl   dev\-lang/tk
.fi
.TP
.BR use.mask
USEフラグの中には、アーキテクチャによっては意味を成さないものもある
(例えば、非ppc環境でのaltivecや非x86環境でのmmx)。ここには、マスクするものを列挙する。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのUSEフラグを記述する。
.fi
.TP
.BR virtuals
このファイルでは、デフォルトでvirtualとなるパッケージを管理する。
例えば、あるパッケージがe\-mailを送信する必要がある場合、virtual/mtaが必要となる。
virtual/mtaを提供するパッケージ(qmail、sendmail、postfix等)が無い場合、Portageは
このファイルを見てどのパッケージを使用するかを決定する。この場合、Gentooは
(virtualファイルで定義されているので)、net\-mail/ssmtpをデフォルトで使用する。
net\-mail/ssmtpがデフォルトで定義されているのは、このパッケージが
e\-mailを送信するには極めて単純で最小限であると言う理由からである。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのvirtual名とDEPENDアトムのペアを記述する。
.fi

.I 例:
.nf
# net\-mail/ssmtpをデフォルトのMTAとして使用する場合
virtual/mta           net\-mail/ssmtp
# app\-dicts/aspell\-enをデフォルトの辞書として使用する場合
virtual/aspell\-dict   app\-dicts/aspell\-en
.fi
.RE
.TP
.BR /etc/portage/
.RS
.TP
.BR bashrc
必要な時、このファイルはebuild用に標準のroot
環境とは異なる特殊な環境を構築するのに使用される。
構文は、他のbashスクリプトと同じである。
.TP
.BR package.mask
マスクするDEPENDアトムのリスト。特定のバージョンのパッケージがうまく動作しない
場合に役に立つ。例えば、Nvidiaドライバーを使用いるが、1.0.4496以前ものだけを
使いたい、という場合。問題なし!

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのDEPENDアトムを記述する。
.fi

.I 例:
.nf
# 1.0.4496以前のバージョンの
# nvidiaドライバーをマスクしたい場合
>=media\-video/nvidia\-kernel\-1.0.4496
>=media\-video/nvidia\-glx\-1.0.4496
.fi
.TP
.BR package.unmask
前述したpackage.maskのように、マスクを外したいパッケージを列挙する。
グローバルなpackage.maskファイルの設定を上書きしたい場合に使用される(詳細は後述)。
KEYWORDSによってマスクされたパッケージは上書きしないことに注意。
.TP
.BR package.keywords
パッケージごとのKEYWORD。通常の安定したマシンにまだ非安定版のパッケージを混在させたい場合、あるいはその逆の場合に使用される。このファイルは、1パッケージに対するACCEPT_KEYWORDSを追加する。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのDEPENDアトムと、それに続けてACCEPT_KEYWORDSを記述する。
.fi

.I 例:
.nf
# 常に非安定版のlibgdを使用したい場合
media\-libs/libgd ~x86
# 安定版のmplayerのみを使用する場合
media\-video/mplayer \-~x86
# \-* でマスクされたパッケージを使う
>=sys\-kernel/linux\-headers\-2.6 \-*
.fi
.TP
.BR package.use
パッケージごとのUSEフラグ。ローカルUSEフラグを追跡したり、特定のパッケージのみに
USEフラグを有効にしたい時に使用される。GTKの開発を行っていて、
GTK用のドキュメントは欲しいが、QTのドキュメントはいらないといった場合に、
極めて簡単にそれを実現することが可能である。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- 1行に1つのDEPENDアトムと、それに続けて空白区切りでUSEフラグのリストを記述する。
.fi

.I 例:
.nf
# GTK 2.x のドキュメントを有効にする場合
=x11\-libs/gtk+\-2* doc
# QTのmysqlサポートを無効にする場合
x11\-libs/qt \-mysql
.fi
.TP
.BR mirrors
Portageは、mirror:// の形式のURLに遭遇した場合、実際のホストをこのファイルから
検索する。もしミラーサイトがここに見つからない場合、グローバルなミラーサイトの
ファイルである/usr/portage/profiles/thirdpartymirrorsを調べる。また、"local"と
呼ばれる特別なミラー種別も設定しているかもしれない。このミラーリストは、
GENTOO_MIRRORSより前に調べられ、パッケージにRESTRICT="nomirror"が指定してあっても
使用される。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- ミラーの種類と、それに続けてホストのリストを記述する。
.fi

.I 例:
.nf
# 社内からのみ使用される、ローカルのプライベートなミラーの場合
local ftp://192.168.0.3/mirrors/gentoo http://192.168.0.4/distfiles

# 日本在住なので、日本のミラーを最初に使用したい場合
sourceforge http://keihanna.dl.sourceforge.net/sourceforge

# 台湾在住なので、GNUのローカルミラーを最初に使用したい場合
gnu ftp://ftp.nctu.edu.tw/UNIX/gnu/
.fi
.TP
.BR categories
/usr/portage、PORTDIR_OVERLAY、PKGDIRで使用される、有効なカテゴリのリスト
(\fBmake.conf\fR(5)を参照のこと)。このファイルによって、カスタムカテゴリを
作成することが可能になる。

.I 書式:
.nf
\- 1行に1つのカテゴリを記述する。
.fi

.I 例:
.nf
app\-hackers
media\-other
.fi
.TP
.BR virtuals
このファイルはデフォルトでどのパッケージがvirtualを提供するのか制御する。
例えば、あるパッケージが e\-mail を送る必要があるのであれば、
そのパッケージは virtual/mta を必要とする。
virtual/mta (qmail、sendmail、postfix、など)を提供するパッケージがなければ、
Portageはこのファイルを見てどのパッケージを使うか知る。
この例では、Gentoo は net\-mail/ssmtp を (virtualsファイルで定義されている)
デフォルトとして使う。
これは、e\-mailを送るのにまさに最小のことだけをするパッケージだからである。

.I 書式:
.br
\- コメントは # で始まる
.br
\- 1行につき1 virtual と DEPEND アトムベース

.I 例:
.br
# net\-mail/ssmtp をデフォルトの mta に
.br
virtual/mta           net\-mail/ssmtp
.br
# app\-dicts/aspell\-en をデフォルトの辞書に
.br
virtual/aspell\-dict   app\-dicts/aspell\-en
.RE
.TP
.BR /usr/portage/profiles/
開発者によって管理されるGentooのグローバルな設定。これらの設定を上書きするには
\fB/etc/portage/\fRにあるファイルを使用すること。
.RS
.TP
.BR arch.list
すべての有効なKEYWORDのリスト。これには修飾子は含まれない。

.I 書式:
.nf
\- 1行に1つのKEYWORDを記述する。
.fi

.I 例:
.nf
x86
ppc
sparc
.fi
.TP
.BR categories
/usr/portage、PORTDIR_OVERLAY、PKGDIRで使用される、有効なカテゴリのリスト
(\fBmake.conf\fR(5)を参照のこと)。

.I 書式:
.nf
\- 1行に1つのカテゴリを記述する。
.fi

.I 例:
.nf
app\-admin
dev\-lang
games\-strategy
sys\-kernel
.fi
.TP
.BR package.mask
どのプロファイルにおいてもインストールされるべきでないパッケージに対する
DEPENDアトムのリストが記述されている。最新のKDEのベータ版をPortageに
追加はするが、誰かが不本意にそれらにアップグレードしてしまわないようにする
時に使用される。また、セキュリティの問題で、特定のバージョンを手早く
マスクしてしまいたい場合にも使用される。このファイルには、なぜそのパッケージが
マスクされているのか、また、誰がマスクしたのかをコメントとして必ず記述すること。

.I 書式:
.nf
\- # から始まる行はコメントである。
\-  1行に1つのDEPENDアトムを記述する。
.fi

.I 例:
.nf
# セキュリティ対策
<sys\-libs/zlib\-1.1.4
# <caleb@gentoo.org> (10 Sep 2003)
# 新しいKDEのベータ版
=kde\-base/kde\-3.2.0_beta1
=kde\-base/kdeaccessibility\-3.2.0_beta1
.fi
.TP
.BR thirdpartymirrors
mirror:// 形式のURLと、実際のミラーリストと対応づけを制御する。
こうすることで、1つのサーバーに過負荷がかかることを防ぐ。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- ミラー種別と、それに続けてホストのリストを記述する。
.fi

.I 例:
.nf
sourceforge http://aleron.dl.sourceforge.net/sourceforge http://unc.dl.sourceforge.net/sourceforge

gentoo http://distro.ibiblio.org/pub/linux/distributions/gentoo/distfiles/ ftp://ftp.gtlib.cc.gatech.edu/pub/gentoo/distfiles

kernel http://www.kernel.org/pub http://www.us.kernel.org/pub
.fi
.TP
.BR use.desc
全てのグローバルなUSEフラグは、それが何をするものなのかという説明と共に、
このファイルに記述されていなければならない。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- USEフラグ \- 簡単な説明
.fi

.I 例:
.nf
3dfx \- Adds support for 3dfx video cards
acl \- Adds support for Access Control Lists
doc \- Adds extra documentation
.fi
.TP
.BR use.local.desc
全てのローカルなUSEフラグは、パッケージ名とその説明と共に、
ここに記述されていなければならない。

.I 書式:
.nf
\- # から始まる行はコメントである。
\- パッケージ:USEフラグ \- 説明
.fi

.I 例:
.nf
app\-editors/nano:justify \- Toggle the justify option
dev\-games/clanlib:clanJavaScript \- Enables javascript support
dev\-libs/DirectFB:fusion \- add Multi Application support
games\-emulation/xmess:net \- Add network support
.fi
.TP
.BR use.mask
\fB/etc/make.profile/\fRにある\fBuse.mask\fRのようなもの。
詳細は上記参照。
.RE
.TP
.BR /var/lib/portage/
.RS
.TP
.BR world
パッケージをemargeする時はいつでも、指定したパッケージ名はここに記録される。
そして、`emerge world \-up`を実行したときには、パッケージのリストは
このファイルから読み込まれる。依存関係のために、インストールされたパッケージまで
ここに記述されるという意味ではないことに注意すること。例えば、
`emerge mod_php`を実行した段階で、まだapacheをインストールしていない場合、
"dev\-php/mod_php"はworldファイルに記録されるが、"net\-www/apache"は
記録されない。詳細は、\fBemerge\fR(1)を参照のこと。

.I 書式:
.nf
\- 1行に1つのDEPENDベースアトムを記述する。
.fi

.I 例:
.nf
games\-misc/fortune\-mod\-gentoo\-dev
dev\-libs/uclibc
app\-cdr/cdemu
.fi
.RE
.SH "作者"
.nf
Marius Mauch <genone@gentoo.org>
Mike Frysinger <vapier@gentoo.org>
Drake Wyrm <wyrm@haell.com>
.fi
.SH "バグの報告"
バグは、http://bugs.gentoo.org/ から報告すること。
.SH "参照"
.BR emerge (1),
.BR ebuild (1),
.BR ebuild (5),
.BR make.conf (5)
.SH "CVS ヘッダ"
原文: portage.5,v 1.18
