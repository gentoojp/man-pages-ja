.\"
.\" Japanese Version Copyright (c) 2004 Mamoru KOMACHI
.\"     all rights reserved.
.\" Translated on 12 Jan 2004 by Mamoru KOMACHI <usata@gentoo.org>
.\"
.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EPM 1"
.TH EPM 1 "2004-01-12" "perl v5.8.2" "User Contributed Perl Documentation"
.SH "名前"
.IX Header "名前"
epm \- Gentoo 用 rpm 同等品
.SH "書式"
.IX Header "書式"
epm { \-eqVy | \-\-erase | \-\-help | \-\-query | \-\-verify } オプション...
.SH "説明"
.IX Header "説明"
このツールは Red Hat の \*(L"rpm\*(R" パッケージ管理ソフトに慣れ親しんだユーザに
Gentoo のパッケージを調べるツールを提供する。具体的には、パッケージの調査、
そしてパッケージの検証、また、システムからパッケージを削除することができる。
わたしは可能なかぎり rpm のように動くよう努力したが、Red Hat と Gentoo
のディストリビューションの違いによって必要となった相異点もある。
.PP
調査と検証は epm のもっとも得意とする機能である。削除モードは実は単に
\&\*(L"emerge \-C\*(R" を呼ぶための入口にすぎないが、習慣の力とは恐ろしいもので、
わたしは \*(L"epm \-e\*(R" とタイプするのが簡単なのだ。
.SH "モード"
.IX Header "モード"
.IP "\fB\-q \-\-query\fR" 4
.IX Item "-q --query"
調査モード。インストールされているパッケージのリストを調べるか、
パッケージが所有しているファイルを調べるために使われる。
.IP "\fB\-V \-y \-\-verify\fR" 4
.IX Item "-V -y --verify"
検証モード。タイムスタンプと \s-1MD5\s0 サムを用いてインストールされている
パッケージの完全性を検証する。サイズ、デバイス、ユーザ、グループ、
そしてモードは現在のところはチェックされていない。
.IP "\fB\-e \-\-erase\fR" 4
.IX Item "-e --erase"
削除モード。システムからパッケージを削除する。パッケージをバージョン
まで含めて指定すると特定のパッケージを削除する。単にパッケージ名を
指定すると全バージョンを削除する (つまり、epm では \-\-allmatches 
がデフォルトであり、これは rpm とは異なっている)。
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
これは実のところモードではない。しかし、モードを特定しないで実行できるのは
これだけである。\*(L"epm \-\-help\*(R" を実行すると各モードで利用できるオプションの
総合的な一覧が見られる。
.SH "例"
.IX Header "例"
vim がインストールされているかどうか調べるには:
.Sp
.Vb 2
\&  $ epm -q vim
\&  vim-6.2_pre2
.Ve
.Sp
出力にグループを含めるには:
.Sp
.Vb 2
\&  $ epm -qG vim
\&  app-editors/vim-6.2_pre2
.Ve
.Sp
vim がどんなバイナリをインストールするか知るには:
.Sp
.Vb 7
\&  $ epm -ql vim | grep bin
\&  /usr/bin/ex
\&  /usr/bin/vim
\&  /usr/bin/rvim
\&  /usr/bin/view
\&  /usr/bin/rview
\&  /usr/bin/vimdiff
.Ve
.Sp
/usr/bin/vim を所有しているのはどのパッケージか調べる:
.Sp
.Vb 2
\&  $ epm -qf /usr/bin/vim
\&  vim-6.2_pre2
.Ve
.Sp
vim のインストールを検証するには:
.Sp
.Vb 1
\&  $ epm -V vim
.Ve
.Sp
出力がなければインストールに問題はないことを示す。
パッケージのインストールを検証したときそれ以外の出力が返ってきたなら、
説明は以下のリンクを見てもらいたい。
http://www.rpm.org/max\-rpm/s1\-rpm\-verify\-output.html
.Sp
システムにある vim に関係するパッケージを全て表示するには:
.Sp
.Vb 4
\&  $ epm -qa | grep vim
\&  vim-core-6.2_pre2
\&  vim-6.2_pre2
\&  gvim-6.2_pre2
.Ve
.SH "注"
.IX Header "注"
このツールは Aron Griffis <agriffis@gentoo.org> によって書かれた。
もしかするとこのツールによってあなたのコンピュータが破壊されるかもしれないが、 
わたしにとってはまともに動いている。バグ報告を http://bugs.gentoo.org/
にしてわたしに割り当てれば、そのうち直すかもしれない。
わたしがバグを直す可能性は、Wayne Davison がいつもしているように、
あなたがいいパッチをつけてくれれば飛躍的に増大する。
