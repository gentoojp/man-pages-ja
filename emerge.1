.\" Copyright 1999-2003 Gentoo Technologies, Inc.
.\" Distributed under the terms of the GNU General Public License v2
.\"
.\" Origial version: 2.0.48
.\" Translated on 15 Aug 2003 by Mamoru KOMACHI <usata@gentoo.org>
.\" Updated to 1.43 on 15 Nov 2003
.\"
.TH "EMERGE" "1" "Jun 2003" "Portage 2.0.48" "Portage"
.SH "名前"
emerge \- Portage システムへのコマンドラインインタフェース
.SH "書式"
.TP
.BR emerge
[\fIoptions\fR] [\fIaction\fR] [\fIebuild\fR | \fItbz2file\fR | \fIclass\fR | \fIdependency\fR] ...
.TP
.BR emerge
[\fIoptions\fR] [\fIaction\fR] \fBebuildfile\fR
.TP
.BR emerge
\fBsync\fR | \fBrsync\fR
.TP
.BR emerge
\fI\-\-help \-h\fR [\fBsystem\fR | \fBconfig\fR | \fBsync\fR]
.TP
.BR emerge
\fI\-\-version\fR
.SH "説明"
\fBemerge\fR は Portage システムへのもっとも信頼のおける
コマンドラインインタフェースである。
\fBemerge\fR の主要な用途はパッケージのインストールであり、
インストールしたいパッケージの依存関係を自動的に解決することができる。
それに加え、\fBemerge\fR は \fBPortage ツリー\fR をアップデートし、
新しく更新されたパッケージを使えるようにもできる。
\fBemerge\fR はインストールされているパッケージを新しいリリースに
更新することも巧みにやってのける。
ソースパッケージもバイナリパッケージも扱うことができ、
配布するためのバイナリパッケージを作成することもできる。
.SH "EBUILD、TBZ2、クラスと依存関係"
\fBemerge\fR は主にパッケージのインストールに使用される。
パッケージをインストールするに当たっては、
大きく分けて4つの方法のうちから選ぶことができる:
\fIebuild\fR、\fItbz2 ファイル\fR、\fIクラス\fR もしくは \fI依存関係\fR。
.LP 
.TP
.BR ebuild
\fIebuild\fR としては、いちばん短く書けば、バージョンやカテゴリーを
除いた Portage パッケージのディレクトリ名、たとえば \fBportage\fR や
\fBpython\fR を指定する。
カテゴリーやバージョン番号を \fBsys\-apps/portage\fR や
\fB=python\-2.2.1\-r2\fR のように付加的に使うことができる。
\fBemerge\fR は末尾のスラッシュを無視するので、
ファイル名の補完を使うこともできる。
また、\fIebuild\fR には
\fB/usr/portage/app\-admin/python/python\-2.2.1\-r2.ebuild\fR
のような実際のファイル名を使うこともできる。
.TP
.BR tbz2 ファイル
\fItbz2 ファイル\fR は \fBebuild <パッケージ名>\-<バージョン番号>.ebuild
package\fR もしくは \fBemerge \-\-buildpkg [カテゴリー/]<パッケージ名>\fR
もしくは \fBquickpkg /var/db/pkg/<カテゴリー>/<パッケージ名>\fR
で作成された正しい .tbz2 ファイルでなければならない。
.TP
.BR クラス
パッケージクラスは巨大なパッケージ群を短く書き表わすのに便利である。
現在は2つのクラスがサポートされている: \fBsystem\fR と \fBworld\fR である。
\fBsystem\fR はシステムが正しく動作するために必要と思われるパッケージ
群を指し、\fBworld\fR は \fBsystem\fR にあるパッケージ全てに加え、
\fB/var/cache/edb/world\fR に挙げられているパッケージを含む。
[詳しい情報は後述する \fBファイル\fR を参照。]  
これらのコマンドは一般的に \fB\-\-update\fR と組み合わせて使う。
.TP
.BR 依存関係
\fI依存関係\fR はインストールしたいパッケージに依存するパッケージを
記述している。たとえば、\fB>=dev\-lang/python\-2.2.1\-r2\fR
は Python の 2.2.1\-r2 以上の最新バージョンにマッチする。
同様に、\fB<dev\-lang/python\-2.0\fR は Python の 2.0
より前の最新バージョンにマッチする。
多くのシェルでは「<」や「=」といった文字をエスケープする必要があることに
注意。エスケープ問題を解決するには、
シングルクォート(')やダブルクォート(")で \fI依存関係\fR を囲む。
.SH "アクション"
.TP
.BR アクション指定なし
アクションが指定されなければ、指定されたパッケージの依存関係を満たしながら、
そのパッケージをインストールする、というアクションをする。
引数には \fIebuild\fR、\fItbz2\fR、\fIクラス\fR もしくは \fI依存関係\fR
をとることができる。
\fBtbz2 をインストールしたいなら、\-\-usepkg
オプションを使う必要があることに注意\fR。
最終的にパッケージは \fBworld\fR ファイルに追加され、
のちのちの更新対象になる。
.TP
.BR "clean " (\fB\-c\fR)
システムの機能に影響を与えないパッケージを削除し、
システムをきれいにする。
引数には \fIebuild\fR、\fIクラス\fR、もしくは\fI依存関係\fR
をとることができる。例えば、\fBemerge clean binutils\fR 
とすると binutils の古いバージョンを削除し、
\fBemerge clean net\-www/mozilla\-0.9.9\-r2\fR
とすると特定のバージョンの Mozilla を削除する。
一般的に、このオプションは使っても安全である。
clean \fBではスロットがないパッケージは削除しないことに注意\fR。
.TP
.BR depclean
システムにインストールされているパッケージで、
はっきりとした理由なしにインストールされているパッケージ全てを
決定する。
\fBemerge\fR は \fBsystem\fR パッケージのリストと \fBworld\fR
ファイルをチェックし、
インストールされているべきパッケージのリストを生成する。
そしてそのリストと実際インストールされているパッケージのリストを
比較し、挙げられた違いが不要なパッケージとして削除の対象となる。
\fB警告: パッケージを削除すると、削除されたパッケージに
リンクするパッケージが動かなくなり、ライブラリが見つからない
と文句を言うパッケージが出る可能性がある。\fR
文句を言うパッケージを再 emerge すればこの問題は解決される。
\fBUSE フラグを変更すると depclean
の出力に大きな影響を与えることに注意。\fR
.TP
.BR "help " (\fB\-h\fR)
emerge のヘルプを表示する。
上に挙げた追加引数をどれか加えると、
その項目に特化したヘルプを提示する。
\fBemerge\fR 内部のヘルプ文書はこの man ページよりも更新頻度が高いので、
この man ページが解決に役立たない問題があるなら、
こちらのヘルプを調べること。
.TP
.BR info
これはバグ報告に入れるための情報のリストで、
開発者が報告を受けた問題を解決するために役立つ。
\fBバグ報告を出すときにはこの情報を入れること。\fR
\fI--verbose\fR オプションをつけると詳細な出力がえられる。
.TP
.BR "inject " (\fB\-i\fR)
パッケージを注入(inject)し、そのパッケージの「スタブ」を挿入して、
Portage にそのパッケージがインストールされたと思わせる。
これが便利なのは、たとえば XFree86 のバイナリバージョンが
深遠なハードウェアのために必要だったり、もしくは単に
自分で作ったパッケージを使いたかったりするときである。
注入するためにはカテゴリーとパッケージの特定のバージョンを
指定\fBしなければならない\fR。
例:
\fBemerge inject sys\-kernel/gentoo\-sources\-2.4.19\fR
.TP
.BR "prune " (\fB\-P\fR)
\fB警告: このアクションは重要なパッケージを削除する可能性がある!\fR 
マッチするパッケージの最新版以外のバージョンを全て削除する。
パッケージに複数の SLOT があるなら、各 SLOT の最新バージョン
を残す。このアクションは依存関係のチェックをしないので、
システムが正常に稼働するために必要なパッケージまで削除しかねない。
\fB自分がなにをしているのか本当に分かっていなければ、
このアクションの代わりに\fR clean \fBを使うこと\fR。
このアクションの引数は \fIebuild\fR、\fIクラス\fRまたは\fI依存関係\fR
である。\-\- 具体例は上記 \fBclean\fR を参照。
.TP
.BR regen
Portage に Portage ツリーに入っている全 ebuild の依存関係キャッシュを
チェックし更新させる。キャッシュは検索と依存関係ツリーの構築の速度向上
に使われる。rsync はサーバ側のキャッシュを使ってキャッシュを更新するので、
rsync ユーザにはこのコマンドは薦めない。「rsync ユーザ」と他のユーザの
間の違いを知らないなら、あなたは「rsync ユーザ」だろう :)  
rsync ユーザはキャッシュを再生成するためには単に \fBemerge sync\fR 
を実行するだけでよい。
.TP
.BR "search " (\fB\-s\fR)
Portage ツリーの中を指定された文字列でマッチするものを検索する。
検索文字列は正規表現である。たとえば、
\fBemerge search "^kde"\fR
は「kde」で始まるパッケージ全てを検索し、
\fBemerge search "gcc$"\fR
は「gcc」で終わるパッケージ全てを検索し、
\fBemerge search "office"\fR
は「office」という単語を含むパッケージ全てを検索する。
パッケージの説明文も検索したいなら、
\fB\-\-searchdesc\fR オプションを使う。
.TP
.BR sync
rsync.gentoo.org ミラーのいずれかと Portage ツリーの更新を始める。
\fBPortage ツリーに対して行った変更は全て消去されることに注意\fR。
特殊な環境を除いて、このアクションは更新に \fBrsync\fR を用いる。
変更の削除を防ぐ方法については、make.conf の PORTDIR_OVERLAY
の記述を参照。
.TP
.BR "unmerge " (\fB\-C\fR)
\fB警告: このアクションは重要なパッケージを削除する可能性がある!\fR
マッチするパッケージ全てを削除する。
このアクションは依存関係のチェックをしないので、
システムが正常に稼働するために必要なパッケージまで削除しかねない。
このアクションの引数は \fIebuild\fR、\fIクラス\fRまたは\fI依存関係\fR
である。\-\- 具体例は上記 \fBclean\fR を参照。
.SH "オプション"
.TP
.BR "--buildpkg " (\fB\-b\fR)
emerge の際パッケージを実際にインストールすることに加え、
処理される全 ebuild についてバイナリパッケージもビルドする。
メンテナーにも便利であるし、複数の Gentoo Linux システムを
管理していても便利である(ビルド一発どこでも emerge tbz2)。
パッケージは \fI${PKGDIR}\fR/All ディレクトリに作成される。
すでにインストールされているパッケージに対しては、
稼働中のファイルシステムから tbz2 を作成する \fBquickpkg\fR
が使える。
.TP
.BR "--buildpkgonly " (\fB\-B\fR)
emerge の際パッケージを実際にインストールすることに加え、
処理される全 ebuild についてバイナリパッケージもビルドする。
このオプションには、ビルド時の全依存関係が事前にシステムに
emerge されていなければならないという落し穴がある。
.TP
.BR "--changelog " (\fB\-l\fR)
\fB--pretend\fR アクションと組み合わせて使う。
このオプションを使うとアップグレードされる全パッケージの
ChangeLog エントリーが表示される。
.TP
.BR "--columns"
\fI\-\-pretend\fR といっしょに使い、カット＆ペーストしやすい
ように整形されたパッケージ名、新バージョン、旧バージョンが表示される。
.TP
.BR "--debug " (\fB\-d\fR)
emerge コマンドをデバッグモードで動かす。
このモードでは bash のビルド環境は -x オプションつきで動作し、
標準出力に詳細なデバッグ情報を出力する。
\-\-debug は bash の構文エラーを探すために役立つ。
.TP
.BR "--deep " (\fB\-D\fR)
\fB\-\-update\fR と組み合わせて使い、\fBemerge\fR にパッケージの
直接の依存関係だけをチェックするのではなく、パッケージの依存ツリー
全体を考慮に入れるよう強制する。
たとえば、このフラグを使うとパッケージの依存関係として直接
挙げられてはいないライブラリのアップデートを捉えることができる。
.TP
.BR "--emptytree " (\fB\-e\fR)
仮想的にインストールされたパッケージのツリーが glibc だけ含むように
手を加える。このオプションは \-\-pretend といっしょに使うととても便利
である。このオプションを使うと、開発者はパッケージの全依存関係のツリー
の概観を知ることができるし、最新のライブラリを使って全ツリーを再ビルド
することもできる。
.TP
.BR "--fetchonly " (\fB\-f\fR)
パッケージをビルドせず、単に全パッケージの fetch だけを行う
(メインパッケージに加えて依存するパッケージ全部)。
.TP
.BR "--noconfmem "
Portage に CONFIG_PROTECT のディレクトリ内の設定ファイルがすでに
マージされていることを示すマージ記録を無視させる。
Portage は通常 CONFIG_PROTECT のディレクトリにあるファイルは
1回だけしかマージせず、ユーザが同じ設定ファイルを何回もマージ
することを防いでいる。このフラグは設定ファイルを常にマージ
させる。
.TP
.BR "--nodeps " (\fB-O\fR)
依存するパッケージを全くインストールせず、指定されたパッケージだけを
インストールする。依存関係が満たされていない場合、ビルドが失敗する
可能性があることに注意。
.TP
.BR "--noreplace " (\fB\-n\fR)
コマンドラインで指定されたパッケージですでにインストールされているものを
飛ばす。このオプションを指定しなければ、パッケージ、ebuild、そして
依存パッケージをコマンドラインで指定すると、そのパッケージがすでに
インストールされていたとしても、Portage はそのパッケージを再インストール
する。デフォルトでは Portage は依存パッケージは再インストールしないこと
に注意。
.TP
.BR "--nospinner"
そのセッションではバーの回転を無効にする。
端末デバイスが TTY だと判断されたときにはバーの回転がアクティブになる。
このフラグはそれに関係なくバーの回転を無効にする。
.TP
.BR "--oneshot"
通常どおり emerge するが、今後アップデートするための world
プロフィールにはパッケージを追加しない。
.TP
.BR "--onlydeps " (\fB\-o\fR)
指定されたパッケージ自身ではなく、
そのパッケージに依存するパッケージをインストール
(もしくはインストールのふりを) する。
.TP
.BR "--pretend " (\fB\-p\fR)
実際にインストールを行わず、\-\-pretend が指定されなかったとすれば
どんなパッケージがインストールされるのかを単に表示する。
よく知らないパッケージをインストールする前には \-\-pretend
を使うことを強く勧める。
出力は、N = 新規、U = 更新、R = 入れ換え、B = インストール済み
パッケージによってブロックされている、となっている。
.TP
.BR "--quiet " (\fB-q\fR)
結果はさまざまだが、全体的に見て Portage が表示する出力を減らしたり
凝縮したりする。
.TP
.BR "--resume"
最後のインストール操作を再開する。この操作は失敗したらエラーを
返すだけだということに注意。Portage になにもすることがなければ、
メッセージと成功の戻り値を返して終了する。
.TP
.BR "--searchdesc " (\fB\-S\fR)
検索文字列がパッケージ名に加え、説明フィールドにもマッチする。
説明も正規表現でマッチすることに \fB注意\fR。
.TP
.BR "--skipfirst"
このアクションは \fB--resume\fR といっしょに使ったときだけ有効である。
これを使うと再開リストにある最初のパッケージを取り除くので、
修正不能なエラーやあまり重要でないエラーがあってもインストール
を継続することができる。
このアクションはパッケージを飛ばしても依存関係を壊さない場合
にだけ使うべきである。
.TP
.BR "--update " (\fB\-u\fR)
パッケージを利用可能な最新バージョンにアップデートする。
\fB\fR \-\-update \fBはまだ全機能を備えていないことに注意\fR。
たとえば、\fBworld\fR ファイルに書かれているパッケージに
依存するパッケージは、そのパッケージと依存するパッケージの
両方が \fBworld\fR ファイルに書かれていないかぎり、
自動的にアップデートされることはない。
.TP
.BR "--upgradeonly " (\fB-U\fR)
パッケージをアップデートするが、インストールされている
パッケージのバージョンを下げるようなアップデートは行わない。
\fBSLOT\fR は基本的なレベルで対象に含まれる。
.TP
.BR "--usepkg " (\fB\-k\fR) 
バイナリパッケージが使えるのであれば、emerge にバイナリパッケージ
($PKGDIR から読み取る)を使い、時間の食うコンパイルを避けることができる。
このオプションは CD インストールのとき便利である。
export PKGDIR=/mnt/cdrom/packages し、このオプションを使うことで、
emerge の際依存関係を満たすために CD からバイナリパッケージを「引っ張って」
くることができる。
.TP
.BR "--verbose " (\fB\-v\fR)
詳細モードで emerge を動かす。
現在のところ、このフラグは emerge の際 GNU info にエラーがあれば
出力させる。
.TP
.BR "--version " (\fB\-V\fR)
\fBemerge\fR のバージョン番号を表示する。
他のオプションと組み合わせて使うことはできない。
このアクションの名前とフォーマットは慣習的なものである。
.SH "出力"
emerge と pretend/verbose フラグを組み合わせて使う場合、
出力は一見しただけではちょっと理解しがたいかもしれない。
このセクションでは簡略化された情報が意味しているのはなにか説明する。
.TP
.B [blocks B     ] app-text/dos2unix (from pkg app-text/hd2u-0.8.0)
dos2unix は hd2u がインストールされるのをブロックしている。
ブロックするパッケージというのは、2つのパッケージが互いのファイルを
上書きしてしまうか、もしくはシステムの中をなんらかの形で壊してしまう
パッケージという意味である。しかしながら、ブロックするパッケージは
通常同じ機能を提供するので、普通同時にインストールする必要はない。
.TP
.B [ebuild  N    ] app-games/qstat-25c
qstat は新規インストールパッケージであり、初めてインストールされる。
.TP
.B [ebuild   R   ] sys-apps/sed-4.0.5
sed 4.0.5 はすでにインストールされているが、
emerge を実行したら Portage は指定されたパッケージを再インストールする
(この場合は sed である)。
.TP
.B [ebuild    F  ] media-video/realplayer-8-r6
realplayer パッケージは手動でソースをダウンロードする必要がある。
パッケージを emerge しようとするとき、ソースが見つからなければ、
Portage は停止し必要なファイルをダウンロードするための手順を提示する。
.TP
.B [ebuild     U ] net-fs/samba-2.2.8_pre1 [2.2.7a]
Samba 2.2.7a はすでに emerge されており、
バージョン 2.2.8_pre1 へとアップデートすることができる。
.TP
.B [ebuild     UD] media-libs/libgd-1.8.4 [2.0.11]
libgd 2.0.11 はすでに emerge されているが、
emerge を実行したら Portage は libgd をバージョン 1.8.4
にダウングレードしてくれる。
.br
これは新しいバージョンのパッケージが壊れていたり、セキュリティホール
を作るが対策がまだ出されていないなどの理由でマスクされた場合に
起きることがある。
.br
これが起きるその他の理由としては、emerge しようとしているパッケージが
うまく emerge するために古いバージョンのパッケージを要求している場合
も考えられる。これは libgd 1.x とともに作成されたパッケージが libgd
2.x ではコンパイルできず、emerge する前に libgd をまずダウングレード
しなければならないという意味である。
.TP
.B [ebuild     U-] x11-base/xfree-4.3.0 [4.2.99.902]
この \- は xfree についての \fBSLOT\fR 情報がないことを表している。
これは前に emerge されたバージョンが注入されたもの
(詳しい情報は \fBinject\fR を参照)だったときや、
とても古いもの(なので SLOT が存在していない場合)だったり
するときに起こる。いずれの場合でも新しいバージョンの xfree 
がアップデートする楽しみに使える。
.TP
.B [ebuild    U ] net-analyzer/nmap-3.15_beta2 [3.15_beta1] -gtk -gnome
\-gtk と \-gnome は nmap を emerge するときの \fBUSE\fR 変数の
状態を示している。この場合 nmap が \fBUSE\fR 変数の gtk と gnome
が利用可能だが、現在の設定では gtk と gnome は無効になっていることが
分かる。そのため、nmap を emerge するとき gtk と gnome のサポートは
有効にならない。
.SH "注意"
ほとんど常に、パッケージをインストールしたりアップデートしたり
しようとする前は、\fB--pretend\fR install もしくは update 
を実行するべきである。そうすればどこまで実行されるのか分かり、
修正しなければならないブロックするパッケージを表示させることができる。
これは Portage ツリーが特に活動的だと多数のパッケージが
アップデートされる可能性のある \fBsystem\fR と \fBworld\fR
クラスに対しても同様である。
.LP 
また、典型的には \fB\-\-update\fR を使い、
すでに完全に更新されたパッケージは無視するが、
まだ更新されていないパッケージをアップグレードしたいだろう。
.LP 
まだインストールされていないパッケージに依存関係があるパッケージで、
パラメータでその依存関係を明示的に指定しないでそのパッケージを
インストールするとき、依存関係でインストールされるパッケージは
world ファイルには追加されない。world のアップデートでそういった
パッケージも検出したいなら、依存関係のパッケージも \fBemerge\fR
のパラメータとして必ず明示的に列挙すること。
.LP 
\fBUSE 変数\fR は、コマンドラインで指定してデフォルトの場所
で指定されている値を上書きし、インストールしたくない
依存パッケージを使うのを避けることができる。
\fBコマンドラインで指定された USE フラグは記憶されない\fR。
たとえば、\fBUSE="\-x \-gnome" emerge mc\fR とすると mc
をこの USE 設定で emerge する。
.LP 
If \fBemerge \-\-update system\fR および \fB emerge \-\-update world\fR
はがエラーメッセージを出して失敗する場合、ebuild がその時点で使っている
バージョンの \fBemerge\fR にはない新しい機能を使っている可能性がある。
その場合は、\fBemerge \-\-update portage\fR を使って Portage 
を必要な新機能をサポートする最新バージョンにアップグレードすることが
できる。
.SH "マスクされたパッケージ"
\fI注意: 開発中のパッケージを使うときは用心しなさい。
マスクされたパッケージを間違って使うことに起因する問題やバグは
Gentoo 開発者の時間を浪費させる。もしかりに問題が起きても
自分で対処できるのを確認すること。\fR
.LP 
\fBPortage\fR におけるマスクとは3つの重要な機能を提供する:
実際に計算機で使うパッケージのテスト期間を設け、
失敗するであろうパッケージを使うことを防ぎ、
壊れたパッケージやセキュリティホールになりうるパッケージをマスクする。
マスクは \fBpackage.mask\fR と KEYWORDS という2つの方法で行うことができる。
.TP
\fBpackage.mask\fR
\fBpackage.mask\fR はまず問題を引き起こすパッケージの使用や、
異なったシステムでは問題があることが知られているパッケージの使用を
ブロックする。このファイルは \fI${PORTDIR}/profiles\fR にある。
パッケージは、このファイルでパッケージをマスクしている行の最初に
コメント文字 (\fB#\fR) を付加することによってマスクを外すことができる。
.TP
\fBKEYWORDS\fR
KEYWORDS もテスト中のパッケージをマスクするために使うことができる。
各パッケージにはアーキテクチャ固有のキーワードがあり、
\fBPortage\fR にどのシステムがそのパッケージをインストールすることが
できるか知らせることができる。
あるアーキテクチャでコンパイルできるが、まだそのアーキテクチャでは
「stable」だと分かっていないパッケージは、アーキテクチャ名の前に
チルダ (\fB~\fR) をつけることでマスクする。
\fBemerge\fR は \fBACCEPT_KEYWORDS\fR 環境変数を調べ、KEYWORD
でマスクされているパッケージの emerge を許可したり禁止したりする。
\fBemerge\fR にこれらの「testing」バージョンをビルドするよう伝えるには、
\fBACCEPT_KEYWORDS\fR に「\fB~arch\fR」を設定すればよい。
\fBarch\fR は \fIx86 ppc sparc mips alpha arm hppa\fR
のいずれかである。たとえば、
\fBACCEPT_KEYWORDS="~x86" emerge xfree\fR
とすれば \fBemerge\fR は KEYWORDS でマスクされたバージョンの
xfree もアップグレード候補として対象に入れる。
\fB警告:\fR 自分のアーキテクチャに相当する値以外のものをこの
変数に設定 \fIしてはいけない\fR。
.SH "バグ報告"
バグに出会ったら web サイト経由で報告してください:
.LP 
\fBhttp://bugs.gentoo.org/\fR
.LP 
バグ報告を提出するとき、\fBemerge info\fR
の出力結果を入れるようにしてください。
.SH "関連項目"
.BR "emerge --help",
.BR ebuild (1),
.BR ebuild (5),
.BR make.conf (5)
.LP 

\fI/usr/lib/portage/bin\fR にあるたくさんの補助アプリケーション
.LP 
\fBgentoolkit\fR パッケージには \fBqpkg\fR (パッケージ検索ツール)
のような有用なスクリプトが収められている。
.SH "ファイル"
.TP
\fB/var/cache/edb/world\fR 
ユーザ指定パッケージの全リストが書かれている。
このファイルは編集しても問題ない。
\fBworld\fR クラスのアップデートで更新してほしいパッケージを追加したり、
更新してほしくないパッケージを削ったりしてかまわない。
.TP
\fB/etc/make.conf\fR 
ビルドプロセスのための変数が書かれており、
\fBmake.globals\fR に書かれている変数を上書きする。
\fB下に挙げられているファイルではなく、このファイルを編集すること\fR。
.TP
\fB/etc/make.profile/make.defaults\fR
ビルドプロセスのためのプロファイル特有の変数が書かれている。
\fBこのファイルを編集してはならない\fR。
.TP
\fB/etc/make.profile/use.defaults\fR
パッケージをインストールするとき、それぞれについてデフォルトで有効になる
USE フラグが書かれている。
\fBこのファイルを編集してはならない\fR。
.TP
\fB/usr/portage/profiles/use.desc\fR 
USE フラグのマスターリストが機能の説明と一緒に書かれている。
\fBこのファイルを編集してはならない\fR。
.TP
\fB/etc/make.profile/virtuals\fR 
virtual 依存性を解決するために使われるデフォルトパッケージのリストが
書かれている。
\fBこのファイルを編集してはならない\fR。
.TP
\fB/var/cache/edb/virtuals\fR 
virtual 依存性を解決するために使われるパッケージのリストが書かれている。
virtual 依存性の解決に失敗した場合、対応する virtual のエントリーを
ここで並び替えるとよい。
virtual の次に挙げられている最初のパッケージが
virtual のマッチで使われるエントリーとなる。
.TP
\fB/etc/make.profile/package\fR
基本システムとして使われるパッケージのリストが書かれている。
\fBsystem\fR と \fBworld\fR クラスがこのファイルを参照する。
\fBこのファイルを編集してはならない\fR。
.TP
\fB/etc/make.globals\fR 
ビルドプロセスのためのデフォルト変数が書かれている。
\fBこのファイルを編集してはならない\fR。
.SH "著者"
Daniel Robbins <drobbins@gentoo.org>
.br 
Geert Bevin <gbevin@gentoo.org>
.br 
Achim Gottinger <achim@gentoo.org>
.br 
Nicholas Jones <carpaski@gentoo.org>
.br 
Phil Bordelon <sunflare@gentoo.org>
.br
Mike Frysinger <vapier@gentoo.org>
.SH "CVS ヘッダ"
原文: emerge.1,v 1.43 2003/09/13 18:49:44 vapier
